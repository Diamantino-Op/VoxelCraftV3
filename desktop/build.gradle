buildscript {
  repositories {
    gradlePluginPortal()
  }
}

plugins {
  id "application"
}

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'com.diamantino.voxelcraft.desktop.DesktopLauncher'

application.setMainClass(mainClassName)

java {
  sourceCompatibility = JavaVersion.current()
}

compileJava.options.release.set(Integer.parseInt(JavaVersion.current().getMajorVersion()));

dependencies {
  implementation project(':coreClient')
  implementation "games.rednblack.miniaudio:miniaudio:$miniaudioVersion:natives-desktop"
  implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

def os = System.properties['os.name'].toLowerCase()

run {
  workingDir = rootProject.file('assets').path
  setIgnoreExitValue(true)

  if (os.contains('mac')) {
    jvmArgs += "-XstartOnFirstThread"
  }
}

jar {
  archiveFileName.set("${appName}-Desktop-${voxelcraftVersion}.jar")
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  dependsOn configurations.runtimeClasspath
  from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
  exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
  dependencies {
    exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
  }
  manifest {
    attributes 'Main-Class': mainClassName
  }
  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}

distributions {
  main {
    contents {
      into('libs') {
        project.configurations.runtimeClasspath.files.findAll { file ->
          file.getName() != project.tasks.jar.outputs.files.singleFile.name
        }.each { file ->
          exclude file.name
        }
      }
    }
  }
}
