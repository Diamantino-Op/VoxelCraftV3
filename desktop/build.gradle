buildscript {
  repositories {
    gradlePluginPortal()
  }
  dependencies {
    classpath "org.beryx:badass-runtime-plugin:1.12.7"
  }
}

apply plugin: 'org.beryx.runtime'

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'com.diamantino.voxelcraft.desktop.DesktopLauncher'
sourceCompatibility = javaVersion

dependencies {
  implementation project(':core')
  implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

def os = System.properties['os.name'].toLowerCase()

run {
  workingDir = rootProject.file('assets').path
  setIgnoreExitValue(true)

  if (os.contains('mac')) {
    jvmArgs += "-XstartOnFirstThread"
  }
}

jar {
  archiveBaseName.set(appName)
  destinationDirectory = file("$project.buildDir/lib")
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  dependsOn configurations.runtimeClasspath
  from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
  exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
  dependencies {
    exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
  }
  manifest {
    attributes 'Main-Class': project.mainClassName
  }
  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}

jpackageImage.dependsOn jar

runtime {
  options.set(['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--strip-native-commands', '--vm', 'server'])
  modules.set([
    'jdk.unsupported'
  ])
  distDir.set(file(buildDir))
  jpackage {
    imageName = appName
    skipInstaller = true
    jpackageHome = javaHome.getOrElse("")
    mainJar = jar.archiveFileName.get()
    if (os.contains('win')) {
      imageOptions = ["--icon", "icons/logo.ico"]
    } else if (os.contains('nix') || os.contains('nux') || os.contains('bsd')) {
      imageOptions = ["--icon", "icons/logo.png"]
    } else if (os.contains('mac')) {
      imageOptions = ["--icon", "icons/logo.icns", "--java-options", "\"-XstartOnFirstThread\""]
    }
  }
}

task dist(dependsOn: [jar]) {
}
